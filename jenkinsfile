pipeline{
    agent{
        label "NODE"
    }
    parameters {
        string(name: 'MAVEN_BUILD', defaultValue: 'clean install', description: 'maven build')
    }
    
    triggers {
        pollSCM('* * * * *')
    }
    options {
     buildDiscarder(logRotator(numToKeepStr: '20'))
    }
    stages{
        stage("checkout"){
            steps {
                mail to: "akashkadao@gmail.com",
                    subject: "Build started for Jenkins JOB $JOB_NAME",
                    body: "Build started for Jenkins JOB $JOB_NAME"
                git branch: "${params.BRANCH_TO_BUILD}", url: "https://github.com/akashkadao/spring-petclinic.git"
            }
        }
        stage ('Artifactory Configuration') {
            steps {
                
                rtMavenDeployer (
                    id: 'maven-deployer',
                    serverId: 'central',
                    releaseRepo: hello-libs-release-local,
                    snapshotRepo: hello-libs-snapshot-local,
                )
            }
        }
        
        stage('Build Maven Project') {
            steps {
                rtMavenRun (
                    tool: 'maven',
                    pom: 'pom.xml',
                    goals: 'clean install',
                    deployerId: "maven-deployer",
                    
                )
            }
        }

        stage ('Publish Build Info') {
            steps {
                rtPublishBuildInfo (
                    serverId: "central"
                )
            }
        }
        
        stage("result"){
            steps{
                junit '**/target/surefire-reports/TEST-*.xml'
                archiveArtifacts 'target/*.jar' 
            }
        }
    }

    post {
        always{
            echo "====++++job completed++++===="
            mail to: "akashkadao@gmail.com",
                subject: "JOB completed $JOB_NAME with Build Id $BUILD_ID ",
                body: "JOB completed for Jenkins JOB $JOB_URL"

                archiveArtifacts artifacts: '**/*.jar', fingerprint: true
                junit '**/*.xml'
        }
        failure {
            mail to: "akashkadao@gmail.com",
                subject: "Build Failed for Jenkins JOB $JOB_NAME with Build Id $BUILD_ID ",
                body: "Build Failed for Jenkins JOB $JOB_URL"
        }
        success {
            junit '**/target/surefire-reports/TEST-*.xml'
        }
    }
}